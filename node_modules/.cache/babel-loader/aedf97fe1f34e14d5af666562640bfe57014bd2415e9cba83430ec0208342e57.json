{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anurag\\\\Desktop\\\\Project\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getPosts, supportPost, notSupportPost } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await getPosts();\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handleSupport = async id => {\n    try {\n      await supportPost(id);\n      setPosts(posts.map(post => post._id === id ? {\n        ...post,\n        supports: post.supports + 1\n      } : post));\n    } catch (error) {\n      console.error('Error supporting post:', error);\n    }\n  };\n  const handleNotSupport = async id => {\n    try {\n      await notSupportPost(id);\n      setPosts(posts.map(post => post._id === id ? {\n        ...post,\n        supports: post.supports - 1\n      } : post));\n    } catch (error) {\n      console.error('Error not supporting post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.name || 'Anonymous'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.story\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Supports: \", post.supports]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSupport(post._id),\n          children: \"Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleNotSupport(post._id),\n          children: \"Not Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","getPosts","supportPost","notSupportPost","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","fetchPosts","response","data","error","console","handleSupport","id","map","post","_id","supports","handleNotSupport","children","fileName","_jsxFileName","lineNumber","columnNumber","name","story","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Anurag/Desktop/Project/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getPosts, supportPost, notSupportPost } from '../api';\r\n\r\nconst PostList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await getPosts();\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleSupport = async (id) => {\r\n    try {\r\n      await supportPost(id);\r\n      setPosts(posts.map(post => post._id === id ? { ...post, supports: post.supports + 1 } : post));\r\n    } catch (error) {\r\n      console.error('Error supporting post:', error);\r\n    }\r\n  };\r\n\r\n  const handleNotSupport = async (id) => {\r\n    try {\r\n      await notSupportPost(id);\r\n      setPosts(posts.map(post => post._id === id ? { ...post, supports: post.supports - 1 } : post));\r\n    } catch (error) {\r\n      console.error('Error not supporting post:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Posts</h2>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post._id}>\r\n            <h3>{post.name || 'Anonymous'}</h3>\r\n            <p>{post.story}</p>\r\n            <p>Supports: {post.supports}</p>\r\n            <button onClick={() => handleSupport(post._id)}>Support</button>\r\n            <button onClick={() => handleNotSupport(post._id)}>Not Support</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}